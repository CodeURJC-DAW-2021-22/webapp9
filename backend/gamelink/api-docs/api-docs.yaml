openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/videogames/{id}:
    get:
      tags:
      - videogames-rest-controller
      operationId: getVideogame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Videogame'
    put:
      tags:
      - videogames-rest-controller
      operationId: updateVideogame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Videogame'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Videogame'
    delete:
      tags:
      - videogames-rest-controller
      operationId: deleteVideogame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Videogame'
  /api/videogames/{id}/purchase/{usId}:
    put:
      tags:
      - videogames-rest-controller
      operationId: purchaseVideogame
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: usId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/videogames/{id}/addRelatedNew/{idn}:
    put:
      tags:
      - videogames-rest-controller
      operationId: addRelatedNew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: idn
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/News'
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usero'
    put:
      tags:
      - user-rest-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: updatedUser
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Usero'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usero'
  /api/users/{id}/password:
    put:
      tags:
      - user-rest-controller
      operationId: upadatePassword
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/{id}/creditCard:
    put:
      tags:
      - user-rest-controller
      operationId: updateCreditCard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: creditCard
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-rest-controller
      operationId: addCreditCard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: creditCard
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/news/{id}:
    get:
      tags:
      - news-rest-controller
      operationId: getNew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/News'
    put:
      tags:
      - news-rest-controller
      operationId: updateNew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/News'
    delete:
      tags:
      - news-rest-controller
      operationId: deleteNew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/News'
  /api/news/{id}/read/{usId}:
    put:
      tags:
      - news-rest-controller
      operationId: readNew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: usId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/videogames/{id}/image:
    get:
      tags:
      - videogames-rest-controller
      operationId: downloadVgImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - videogames-rest-controller
      operationId: uploadVgImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Videogame'
    delete:
      tags:
      - videogames-rest-controller
      operationId: deleteVgImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/videogames/{id}/companyImage:
    get:
      tags:
      - videogames-rest-controller
      operationId: downloadVgCompanyImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - videogames-rest-controller
      operationId: uploadVgCompanyImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Videogame'
    delete:
      tags:
      - videogames-rest-controller
      operationId: deleteVgCompanyImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/videogames/:
    get:
      tags:
      - videogames-rest-controller
      operationId: getVideogames
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Videogame'
    post:
      tags:
      - videogames-rest-controller
      operationId: createVideogame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Videogame'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Videogame'
  /api/users/{id}/image:
    get:
      tags:
      - user-rest-controller
      operationId: downloadUserImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-rest-controller
      operationId: uploadUserImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usero'
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUserImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/:
    get:
      tags:
      - user-rest-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usero'
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      parameters:
      - name: user
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Usero'
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usero'
  /api/news/{id}/image:
    get:
      tags:
      - news-rest-controller
      operationId: downloadNewImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - news-rest-controller
      operationId: uploadNewImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/News'
    delete:
      tags:
      - news-rest-controller
      operationId: deleteNewImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/news/:
    get:
      tags:
      - news-rest-controller
      operationId: getNews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/News'
    post:
      tags:
      - news-rest-controller
      operationId: createVideogame_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/News'
  /api/auth/refresh:
    post:
      tags:
      - login-rest-controller
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/logout:
    post:
      tags:
      - login-rest-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-rest-controller
      operationId: login
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/videogames/stats/sales:
    get:
      tags:
      - videogames-rest-controller
      operationId: graphic2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/videogames/stats/genres:
    get:
      tags:
      - videogames-rest-controller
      operationId: graphic
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/videogames/pages:
    get:
      tags:
      - videogames-rest-controller
      operationId: findVideogmamePage
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageVideogame'
  /api/users/{id}/recommendations:
    get:
      tags:
      - user-rest-controller
      operationId: findRecomended
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Videogame'
  /api/users/readNews/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUserReadNews
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/News'
  /api/users/purchases/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUserVideogames
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Videogame'
  /api/users/me:
    get:
      tags:
      - user-rest-controller
      operationId: me
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usero'
  /api/news/pages:
    get:
      tags:
      - news-rest-controller
      operationId: findNewsPage
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageNews'
components:
  schemas:
    Usero:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nick:
          type: string
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
        encodedPassword:
          type: string
        creditCard:
          type: string
        image:
          type: boolean
        roles:
          type: array
          items:
            type: string
    Videogame:
      required:
      - genre
      - price
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        price:
          type: number
          format: float
        rating:
          type: number
          format: float
        genre:
          type: string
        company:
          type: string
        continent:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        history:
          type: string
        imageVg:
          type: boolean
        imageCompany:
          type: boolean
        cpuR:
          type: string
        ramR:
          type: string
        ssooR:
          type: string
        gpuR:
          type: string
        storageR:
          type: string
        cpuM:
          type: string
        ramM:
          type: string
        ssooM:
          type: string
        gpuM:
          type: string
        storageM:
          type: string
        onePurchaseVideogame:
          $ref: '#/components/schemas/Usero'
        image:
          type: boolean
    News:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        argument:
          type: string
        image:
          type: boolean
        date:
          type: string
        badge:
          type: string
        readTime:
          type: string
        oneReadNew:
          $ref: '#/components/schemas/Usero'
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    PageVideogame:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Videogame'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        last:
          type: boolean
        first:
          type: boolean
        empty:
          type: boolean
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageNews:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/News'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        last:
          type: boolean
        first:
          type: boolean
        empty:
          type: boolean
